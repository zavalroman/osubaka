--- devil-1.7.8/src-IL/src/il_jp2.c	2009-03-08 12:10:09.000000000 +0500
+++ devil-1.7.8a/src-IL/src/il_jp2.c	2016-12-21 20:48:17.176440998 +0500
@@ -358,7 +358,7 @@
 
 static jas_stream_t *jas_stream_create(void);
 static void jas_stream_destroy(jas_stream_t *stream);
-static void jas_stream_initbuf(jas_stream_t *stream, int bufmode, char *buf, int bufsize);
+static void jas_stream_initbuf(jas_stream_t *stream, int bufmode );
 
 
 // Modified version of jas_stream_fopen and jas_stream_memopen from jas_stream.c of JasPer
@@ -377,7 +377,7 @@
 	stream->openmode_ = JAS_STREAM_READ | JAS_STREAM_BINARY;
 
 	/* We use buffering whether it is from memory or a file. */
-	jas_stream_initbuf(stream, JAS_STREAM_FULLBUF, 0, 0);
+	jas_stream_initbuf(stream, JAS_STREAM_FULLBUF);
 
 	/* Select the operations for a memory stream. */
 	stream->ops_ = &jas_stream_devilops;
@@ -432,8 +432,7 @@
 // The following functions are taken directly from jas_stream.c of JasPer,
 //  since they are designed to be used within JasPer only.
 
-static void jas_stream_initbuf(jas_stream_t *stream, int bufmode, char *buf,
-  int bufsize)
+static void jas_stream_initbuf(jas_stream_t *stream, int bufmode )
 {
 	/* If this function is being called, the buffer should not have been
 	  initialized yet. */
@@ -441,31 +440,18 @@
 
 	if (bufmode != JAS_STREAM_UNBUF) {
 		/* The full- or line-buffered mode is being employed. */
-		if (!buf) {
-			/* The caller has not specified a buffer to employ, so allocate
-			  one. */
-			if ((stream->bufbase_ = jas_malloc(JAS_STREAM_BUFSIZE +
-			  JAS_STREAM_MAXPUTBACK))) {
-				stream->bufmode_ |= JAS_STREAM_FREEBUF;
-				stream->bufsize_ = JAS_STREAM_BUFSIZE;
-			} else {
-				/* The buffer allocation has failed.  Resort to unbuffered
-				  operation. */
-				stream->bufbase_ = stream->tinybuf_;
-				stream->bufsize_ = 1;
-			}
-		} else {
-			/* The caller has specified a buffer to employ. */
-			/* The buffer must be large enough to accommodate maximum
-			  putback. */
-			assert(bufsize > JAS_STREAM_MAXPUTBACK);
-			stream->bufbase_ = JAS_CAST(uchar *, buf);
-			stream->bufsize_ = bufsize - JAS_STREAM_MAXPUTBACK;
-		}
+		if ((stream->bufbase_ = jas_malloc(JAS_STREAM_BUFSIZE +
+           JAS_STREAM_MAXPUTBACK))) {
+             stream->bufmode_ |= JAS_STREAM_FREEBUF;
+             stream->bufsize_ = JAS_STREAM_BUFSIZE;
+         } else {
+             /* The buffer allocation has failed.  Resort to unbuffered
+               operation. */
+             stream->bufbase_ = stream->tinybuf_;
+             stream->bufsize_ = 1;
+         }
 	} else {
 		/* The unbuffered mode is being employed. */
-		/* A buffer should not have been supplied by the caller. */
-		assert(!buf);
 		/* Use a trivial one-character buffer. */
 		stream->bufbase_ = stream->tinybuf_;
 		stream->bufsize_ = 1;
@@ -527,7 +513,7 @@
 	stream->openmode_ = JAS_STREAM_WRITE | JAS_STREAM_BINARY;
 
 	/* We use buffering whether it is from memory or a file. */
-	jas_stream_initbuf(stream, JAS_STREAM_FULLBUF, 0, 0);
+	jas_stream_initbuf(stream, JAS_STREAM_FULLBUF);
 
 	/* Select the operations for a memory stream. */
 	stream->ops_ = &jas_stream_devilops;
